name: cicd-demo
on:
  push:
    branches:
      - '*'
jobs:
  build-job:
    name: Build Job
    runs-on: ubuntu-latest
    steps:
      - name: 'Start build job'
        run: |
          echo "Starting the build job."

      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Setup Java'
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: 'Check Java Version'
        run: |
          java --version

      - name: 'Run Tests'
        run: |
            ./gradlew test

      - name: 'Publish Test Report'
        if: always()
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'test-report'
          path: build/reports/tests/test/*

      - name: 'Assemble JAR'
        run: |
          ./gradlew assemble

      - name: 'Get Version Number'
        run: |
          echo "VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')" >> $GITHUB_ENV

      - name: 'Publish JAR'
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'cicd-demo-${{env.VERSION}}-all.jar'
          path: build/libs/*-all.jar

      - name: 'Write Config & Key Files'
        run: |
          mkdir ~/.oci
          echo "[DEFAULT]" >> ~/.oci/config
          echo "user=${{secrets.OCI_USER_OCID}}" >> ~/.oci/config
          echo "fingerprint=${{secrets.OCI_FINGERPRINT}}" >> ~/.oci/config
          echo "pass_phrase=${{secrets.OCI_PASSPHRASE}}" >> ~/.oci/config
          echo "region=${{secrets.OCI_REGION}}" >> ~/.oci/config
          echo "tenancy=${{secrets.OCI_TENANCY_OCID}}" >> ~/.oci/config
          echo "key_file=~/.oci/key.pem" >> ~/.oci/config
          echo "${{secrets.OCI_KEY_FILE}}" >> ~/.oci/key.pem
          echo "${{secrets.VM_SSH_PUB_KEY}}" >> /home/runner/.oci/id_vm.pub
          touch /home/runner/cloud-init.sh

      - name: 'Create Instance'
        run: |
          ./gradlew --stacktrace step01 \
            -Doci.compartment.id=${{secrets.VM_COMPARTMENT_OCID}} \
            -Doci.instance.name=cicddemo2 \
            -PpublicKeyFile=/home/runner/.oci/id_vm.pub \
            -PuserDataFile=/home/runner/cloud-init.sh

      - name: 'Get Instance IP'
        run: |
          more build/oci/instance/cicddemo2.properties
          function prop {
           grep "${1}" build/oci/instance/cicddemo2.properties|cut -d'=' -f2
          }
          echo "SECURITY_LIST_ID=$(prop 'vcn.security-list.id')" >> $GITHUB_ENV
          echo "INSTANCE_IP=$(prop 'instance.public-ip.0')" >> $GITHUB_ENV

      - name: 'Add Ingress Rule'
        run: |
          ./gradlew addIngressSecurityRule \
            --destination-port=8080 \
            --security-list-id=${{env.SECURITY_LIST_ID}}

      - name: 'Wait for SSH'
        run: |
          while ! nc -w5 -z ${{ env.INSTANCE_IP }} 22; do
                  sleep 5
                  echo "SSH not available..."
          done; echo "SSH ready!"

      - name: 'Stop App'
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{env.INSTANCE_IP}}
          username: opc
          key: ${{secrets.VM_SSH_PRIVATE_KEY}}
          script: |
            pid=`ps aux | grep "[c]icd-demo.jar" | awk '{print $2}'`
            if [ "$pid" == "" ]; then
              echo "Process not found"
            else
              kill -9 $pid
            fi
            sudo mkdir -p /app

      - name: 'Push JAR'
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.INSTANCE_IP }}
          username: opc
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          source: "build/libs/cicd-demo-${{env.VERSION}}-all.jar"
          target: "app"
          strip_components: 2

      - name: 'Start App'
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ env.INSTANCE_IP }}
          username: opc
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          script: |
            sudo mv ~/app/cicd-demo-${{env.VERSION}}-all.jar /app/cicd-demo.jar
            nohup java -jar /app/cicd-demo.jar > output.$(date --iso).log 2>&1 &

